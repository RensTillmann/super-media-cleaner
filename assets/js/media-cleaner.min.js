(function($) { // Hide scope, no $ conflict

    function bytesToSize(bytes) {
       var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
       if (bytes == 0) return '0 Byte';
       var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));
       return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];
    }
	function super_mc_scan($start){
        
        if(typeof $start === 'undefined') var $start = false;

        var $log = $('.logs .log > ul');
        var $dirs = $('.logs .directories > ul');
        var $files = $('.logs .files > ul');
		var $stats = $('.stats');

        var $dir = '';

        var $scanning_dir = $dirs.find('.scanning');
        if(!$scanning_dir.length){
            if($dirs.find('.in_queue').first().length){
                $dirs.find('.in_queue').first().addClass('scanning');
                var $scanning_dir = $dirs.find('.scanning').first();
                $scanning_dir.children('.queued').html('Scanning...');
                $dir = $scanning_dir.children('.dir').text();
            }
        }

        if($dirs.find('li').length){
            if($dirs.find('li').length==$dirs.find('li.completed').length){
                $('.wrap').addClass('super-mc-completed');
                return false;
            }
        }

        $.ajax({
            type: 'post',
            url: ajaxurl,
            data: {
                action: 'super_mc_scan',
                dir: $dir,
                start: $start
            },
            success: function (response) {
                $('.wrap').addClass('super-mc-scanning');
                var $json = JSON.parse(response);

                if( typeof $json.status !== 'undefined' ) {
                    
                    // Check if we are currently analysing the data
                    // e.g: gathering all URLs from the databasse (post_content, post_excerpt, meta data etc)
                    if( $json.status=='analysing' ) {

                        // Show log message to the user
                        $log.children('.working').html('<span>'+$json.query_offset+' - '+$json.log+'</span>');

                        // Continue with analysing
                        super_mc_scan();

                    }

                    if( $json.status=='scanning' ) {

                        if( ($dir=='') && (typeof $json.dir === 'undefined') ) {
                            // Start scanning files
                            super_mc_scan();
                        }else{

                            $('.stats .scanned .files.value').html($json.stats.files_scanned);
                            $('.stats .scanned .directories.value').html($json.stats.directories_scanned);
                            $('.stats .unknown .files.value').html($json.stats.unknown_files);

                            var $extensions = '';
                            $.each($json.stats.unknown_file_extensions, function(k, v){
                                if(k==$json.stats.unknown_file_extensions.length-1){
                                    $extensions += v;
                                }else{
                                    $extensions += v+', ';
                                }

                            });
                            if($extensions==''){
                                $extensions = 'None';
                            }
                            $('.stats .unknown .extensions.value').html($extensions);
                            $('.stats .space .percentage.value').html(parseFloat( ($json.stats.total_size_saved/$json.stats.total_size) * 100).toFixed(2)+' %');
                            $('.stats .space .saved.value').html(bytesToSize($json.stats.total_size_saved));
                            $('.stats .space .size.value').html(bytesToSize($json.stats.total_size));
                            $('.stats .usage .current.value').html('0');
                            $('.stats .usage .credits.value').html('10');

                            // Show log message to the user
                            $log.prepend('<li class="log-type-'+$json.type+'"><span>'+$json.log+'</span></li>');
                            $log.children('.working').remove();
                            $log.prepend('<li class="analysing working">Analysing completed, scanning directories and files</li>');

                            $scanning_dir.attr('data-folders', $json.folders_scanned);
                            $scanning_dir.children('.folders').html($json.folders_scanned);
                            $scanning_dir.attr('data-files', $json.files_scanned);
                            $scanning_dir.children('.files').html($json.files_scanned);
                            $scanning_dir.attr('data-size', $json.total_size);
                            $scanning_dir.children('.size').html(bytesToSize($json.total_size));

                            $.each($json.structure.directories, function(k, v){
                                // Check if we need to append these directories under the scanning directory
                                var $item = '<li class="in_queue"><span class="folder">'+v.file+'</span><span class="dir">'+v.path+'</span><span class="folders">?</span><span class="files">?</span><span class="size">?</span><span class="queued">Queued</span></li>';

                                if($scanning_dir.length){
                                    if(!$scanning_dir.children('ul').length){
                                        $scanning_dir.append('<ul></ul>');
                                    }
                                    $scanning_dir.children('ul').append($item);
                                }else{
                                    $dirs.append($item);
                                }
                            });

                            var time = 1;
                            var $total_files = $files.children('li').length;

                            $.each($json.structure.files, function(k, v){
                                setTimeout( function(){
                                    var $html = '<li class="'+v.found+'" data-size="'+v.size+'">';
                                        $html += '<a href="'+v.post_edit_url+'" target="_blank" class="found">Used</a>';
                                        $html += '<span class="not-found">Not used</span>';
                                        $html += '<a href="'+v.url+'" target="_blank" class="file-url">'+v.file+'</a>';
                                        $html += '<span class="size">('+bytesToSize(v.size)+')</span>';
                                        $html += '</li>';
                                    $files.prepend($html);
                                    $total_files++;
                                    var $width = parseFloat(($total_files/$json.stats.total_files)*100).toFixed(0)+'%';
                                    $('.progress .bar').css('width', $width);
                                    $('.progress .bar .value').html($width);
                                }, time)
                                time += 1;
                                //$files.append('<li>File: '+v.file+' / Found: '+v.found+' / Path: '+v.path+' / Extension: '+v.extension+' / Known: '+v.known+' / Size: '+v.size+'</li>');
                            });

                            setTimeout( function(){ 
                                $scanning_dir.removeClass('scanning').removeClass('in_queue').addClass('completed');
                                // Continue scanning other directories
                                super_mc_scan();
                            }, time);

                            /*
                            localStorage.setItem('myCat', 'Tom');

            				window.localStorage
            				wc_cart_hash_c8d9bf05cb7e58b451a2c8c73ac9d4a9
            				localStorage.getItem("wc_cart_hash_c8d9bf05cb7e58b451a2c8c73ac9d4a9");
            				localStorage.removeItem("myCat");
            				
            				localStorage.getItem("myCat");
            				*/
                        }
                    }
                }

            },
            complete: function(){
                
            },
            error: function (xhr, ajaxOptions, thrownError) {
                $log.html('<li class="log-type-error"><strong>Error:</strong><span>'+xhr.status+' - '+thrownError+'</span></li>');
            }
        });
	}

	$(document).ready(function(){
		$('.super-mc-start-scan:not(.super-mc-loading)').on('click', function(){
            var $this = $(this);
			if(!$this.hasClass('super-mc-loading')){
                $this.attr('disabled','disabled');
                $this.addClass('super-mc-loading');
    			var $old_html = $this.html();
    			$this.html('Analysing...');
    			var $log = $('.logs .log > ul');
                $log.append('<li class="analysing working">Scan started, analysing files</li>');
    			super_mc_scan(true);
            }
		});
	});

	
})(jQuery);